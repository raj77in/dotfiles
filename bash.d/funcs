#!/bin/bash 
# ft=sh

function xssh () 
{ 
    c=($(cat ~/.bash.d/.colorcombo |sort -R |head -1|sed 's/-/ /'));
    if [[ $SHELL = "/bin/bash" ]]; then
        fg=${c[0]};
        bg=${c[1]};
    else
        fg=${c[1]};
        bg=${c[2]};
    fi;
    XTOPTS='-fs 9 -geom 120x36';
    xt="xterm $XTOPTS -bg '#$bg' -fg '#$fg'";
    if [[ $# -ne 1 ]]; then
        _known_hosts_real -a -F '' '';
        host=$(zenity --list --title "Select Host" --column "host" ${COMPREPLY[@]});
        cmd="TERM=xterm $xt -T $fg-$bg-$1 -e ssh -Y $host";
        echo "$fg-$bg" > /tmp/colorcombo;
        echo "Executing CMD :: $cmd";
        eval $cmd &
    fi;
    cmd="TERM=xterm $xt -T $fg-$bg-$1 -e ssh -Y $1";
    echo "$fg-$bg" > /tmp/colorcombo;
    echo "Executing CMD :: $cmd";
    eval $cmd &
}


function addhosts()
{
	for i in {1..254}; do echo "192.168.183.$i vm$i" | sudo tee -a /etc/hosts; done
}


function f() {
	#function_body
    	find . -iname \*$1\*
}

function ex()
{
    if [[ -f $1 ]]; then
        case $1 in
            *.tar.bz2)   tar xjf $1  ;;
            *.tar.gz)    tar xzf $1  ;;
            *.bz2)       bunzip2 $1  ;;
            *.rar)       rar x $1    ;;
            *.gz)        gunzip $1   ;;
            *.tar)       tar xf $1   ;;
            *.tbz2)      tar xjf $1  ;;
            *.tgz)       tar xzf $1  ;;
            *.zip)       unzip $1    ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1     ;;
            *)           echo $1 cannot be extracted ;;
        esac
    else
        echo $1 is not a valid file
    fi
}

function wfuzz-beast()
{
    wfuzz -c -z file,/usr/share/wfuzz/wordlist/general/megabeast.txt --hc 400,403,404,000 --hw 4  -H "User-Agent: Mozilla"  "$1/FUZZ"
}

function urlencode() {
    # urlencode <string>
    hURL -U "$1" -s --nocolor
    return;
    old_lc_collate=$LC_COLLATE
    LC_COLLATE=C

    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf "$c" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done

    LC_COLLATE=$old_lc_collate
}

function urldecode() {
    # urldecode <string>

    local url_encoded="${1//+/ }"
    printf '%b' "${url_encoded//%/\\x}"
}


function mcd()
{
    mkdir -p $1
    cd $1
}

copy_shell_code()
{
    xclip -o |grep '"\\x' |awk -F'"' '{print $2}' | tr -d '\n' |xlip -i
}

function portnumber()
{
    cd $DROPBOX/personal/myscripts/port-numbers
    awk -F, -v p=$1 -v pn=$2 '$3 == p && $2 == pn' service-names-port-numbers.csv
}

function gtfobins()
{
    firefox "https://gtfobins.github.io/gtfobins/$1/"
}

function f()
{
    find . -iname \*$1\*
}

function disk_usage()
{
    while read line
    do
        [[ $line == *KB* ]] && echo -e '\E[37;32m'$line'\033[0m'
        [[ $line == *MB* ]] && echo -e '\E[37;34m'$line'\033[0m'
        [[ $line == *GB* ]] && echo -e '\E[34;31m'$line'\033[0m'
    done < <(
    (du -kod 2>/dev/null|| du -Sxk)| sort -nr | head -${1:-10}|awk '{
    if ($1/1024 > 1024)
        size=$1/1024/1024."GB";
    else
        size=$1/1024."MB";
        print size"\t"$2;
    }'
    )
}


function record()
{
    name="$*"
    sed 's/EXER/'"${name}"'/' /mnt/Dropbox/Calibre-Kindle-Unlimited/Courses/mosse/MICS/intro.txt > /tmp/intro.txt
    pango-view --dpi=110 --markup /tmp/intro.txt &
    recordmydesktop --on-the-fly-encoding --no-sound -o ${name// /_}
}


## From Nahamsec https://github.com/nahamsec/recon_profile
#
##----- AWS -------

s3ls(){
aws s3 ls s3://$1
}

s3cp(){
aws s3 cp $2 s3://$1 
}

#---- Content discovery ----
thewadl(){ #this grabs endpoints from a application.wadl and puts them in yahooapi.txt
curl -s $1 | grep path | sed -n "s/.*resource path=\"\(.*\)\".*/\1/p" | tee -a ~/tools/dirsearch/db/yahooapi.txt
}

#----- recon -----
crtndstry(){
./tools/crtndstry/crtndstry $1
}

am(){ #runs amass passively and saves to json
amass enum --passive -d $1 -json $1.json
jq .name $1.json | sed "s/\"//g"| httprobe -c 60 | tee -a $1-domains.txt
}

certprobe(){ #runs httprobe on all the hosts from certspotter
curl -s https://crt.sh/\?q\=\%.$1\&output\=json | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u | httprobe | tee -a ./all.txt
}

mscan(){ #runs masscan
sudo masscan -p4443,2075,2076,6443,3868,3366,8443,8080,9443,9091,3000,8000,5900,8081,6000,10000,8181,3306,5000,4000,8888,5432,15672,9999,161,4044,7077,4040,9000,8089,443,744$}
}

certspotter(){ 
curl -s https://certspotter.com/api/v0/certs\?domain\=$1 | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $1
} #h/t Michiel Prins

crtsh(){
curl -s https://crt.sh/?Identity=%.$1 | grep ">*.$1" | sed 's/<[/]*[TB][DR]>/\n/g' | grep -vE "<|^[\*]*[\.]*$1" | sort -u | awk 'NF'
}

certnmap(){
curl https://certspotter.com/api/v0/certs\?domain\=$1 | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $1  | nmap -T5 -Pn -sS -i - -$
} #h/t Jobert Abma

ipinfo(){
curl http://ipinfo.io/$1
}


#------ Tools ------
dirsearch(){ runs dirsearch and takes host and extension as arguments
python3 ~/tools/dirsearch/dirsearch.py -u $1 -e $2 -t 50 -b 
}

sqlmap(){
python ~/tools/sqlmap*/sqlmap.py -u $1 
}

ncx(){
nc -l -n -vv -p $1 -k
}

crtshdirsearch(){ #gets all domains from crtsh, runs httprobe and then dir bruteforcers
curl -s https://crt.sh/?q\=%.$1\&output\=json | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u | httprobe -c 50 | grep https | xargs -n1 -I{} python3 ~/tools/dirsearch/dirsearch.py -u {} -e $2 -t 50 -b 
}

